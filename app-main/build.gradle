version version_app

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "kotlin-spring"

jar.dependsOn bootJar

dependencies {
    def MODULE_LIB = "app-lib"
    def MODULE_CORE = "app-core"
    def MODULE_INFRASTRUCTURE = "app-infrastructure"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$version_springBoot"
    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor:$version_springBoot"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:$version_springBoot"

    // region app dependencies
    // First-party dependencies
    implementation project(":${MODULE_LIB}")
    implementation project(":${MODULE_CORE}")
    implementation project(":${MODULE_INFRASTRUCTURE}")

    // Spring dependencies
    implementation "org.springframework.boot:spring-boot-starter:$version_springBoot"
    implementation "org.springframework.boot:spring-boot-starter-validation:$version_springBoot"
    implementation "org.springframework.boot:spring-boot-starter-jdbc:$version_springBoot"

    // Spring Web
    implementation("org.springframework.boot:spring-boot-starter-web:$version_springBoot")

    // Jackson Kotlin support
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson_kotlin"
    // endregion

    // region test dependencies
    // First-party dependencies
    testImplementation project(path: ":${MODULE_LIB}", configuration: "testArtifacts")
    testImplementation project(path: ":${MODULE_CORE}", configuration: "testArtifacts")
    testImplementation project(path: ":${MODULE_INFRASTRUCTURE}", configuration: "testArtifacts")

    // Spring boot test
    testImplementation("org.springframework.boot:spring-boot-starter-test:$version_springBoot") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    // REST Assured
    testImplementation "org.springframework.restdocs:spring-restdocs-core:$version_restDocs"
    testImplementation "org.springframework.restdocs:spring-restdocs-restassured:$version_restDocs"
    // endregion
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$version_springBoot"
    }
}

assemble.doLast {
    final jarFile = new File("${project.projectDir}/build/libs", "${project.name}-${project.version}.jar")
    if (!jarFile.exists()) {
        throw new GradleException("Programme binary is not found in '${jarFile.absolutePath}'.")
    }

    copy {
        from jarFile
        into "$project.rootDir/build/"
    }

    final outputPrefix = "$project.rootDir/build/${project.name}"
    new File("${outputPrefix}-${project.version}.jar").renameTo("${outputPrefix}-latest.jar")
}
