tasks.processResources {
    filesMatching("application.yml") {
        final buildConfig = getBuildConfig()
        final buildMetadata = getBuildMetadata()
        final builtAt = getBuiltAt()

        final expansion = new HashMap<String, String>([
                springAppProfile  : buildConfig,
                projectName       : project.path,
                projectDescription: project.description,
                appVersion        : project.version.toString(),
                builtAt           : builtAt
        ])

        if (buildConfig == "local" || buildConfig == "alpha") {
            expansion.put("mayPrerelease", "-${buildConfig}")
        } else {
            expansion.put("mayPrerelease", "")
        }

        if (buildMetadata.isEmpty()) {
            expansion.put("buildMetadata", "")
        } else {
            expansion.put("buildMetadata", "+${buildMetadata}")
        }

        expand(expansion)
    }
}

assemble.doLast {
    final jarFile = new File("${project.projectDir}/build/libs", "${getArchiveName()}-${project.version}.jar")
    if (!jarFile.exists()) {
        throw new GradleException("Programme binary is not found in '${jarFile.absolutePath}'.")
    }

    copy {
        from jarFile
        into "$project.rootDir/build/"
    }

    final outputPrefix = "$project.rootDir/build/${project.name}"
    new File("${outputPrefix}-${project.version}.jar").renameTo("${outputPrefix}-latest.jar")
}
