enum CC {
    BLACK("30m"),
    RED("31m"),
    GREEN("32m"),
    YELLOW("33m"),
    BLUE("34m"),
    MAGENTA("35m"),
    CYAN("36m"),
    WHITE("37m"),
    LIGHT_BLACK("30;1m"),
    LIGHT_RED("31;1m"),
    LIGHT_GREEN("32;1m"),
    LIGHT_YELLOW("33;1m"),
    LIGHT_BLUE("34;1m"),
    LIGHT_MAGENTA("35;1m"),
    LIGHT_CYAN("36;1m"),
    LIGHT_WHITE("37;1m");

    public final String code;

    private CC(final String code) {
        this.code = code
    }
}

final String colour(final CC code, final String text) {
    final ESC = "${(char) 27}["
    final RESET = "${ESC}0m"

    return "${ESC}${(code as CC).code}${text}${RESET}"
}

final String rPad(final int width, final String text) {
    int spacesCount = width - text.length()
    if (spacesCount > 1) {
        final sb = new StringBuffer(spacesCount)
        while (sb.length() < spacesCount) {
            sb.append(" ")
        }
        return text + sb.toString()
    } else {
        return text
    }
}

final OutputStream execWrapper(final List<String> args) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine args
        standardOutput = stdout
    }
    return stdout
}

ext.CC = { code, text -> colour(code, text) }
ext.RPAD = { width, text -> rPad(width, text) }
ext.cmdLine = { args -> execWrapper(args) }
ext.printlnErr = { text -> System.err.println(text) }

ext.BLACK = CC.BLACK
ext.RED = CC.RED
ext.GREEN = CC.GREEN
ext.YELLOW = CC.YELLOW
ext.BLUE = CC.BLUE
ext.MAGENTA = CC.MAGENTA
ext.CYAN = CC.CYAN
ext.WHITE = CC.WHITE
ext.LIGHT_BLACK = CC.LIGHT_BLACK
ext.LIGHT_RED = CC.LIGHT_RED
ext.LIGHT_GREEN = CC.LIGHT_GREEN
ext.LIGHT_YELLOW = CC.LIGHT_YELLOW
ext.LIGHT_BLUE = CC.LIGHT_BLUE
ext.LIGHT_MAGENTA = CC.LIGHT_MAGENTA
ext.LIGHT_CYAN = CC.LIGHT_CYAN
ext.LIGHT_WHITE = CC.LIGHT_WHITE
